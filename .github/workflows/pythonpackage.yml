name: Python package

# Trigger workflow on push or pull_request
on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      id: cache-poetry
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      id: cache-poetry
      with:
        path: ~/Library/Caches/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - uses: actions/cache@v2
      if: startsWith(runner.os, 'Windows')
      id: cache-poetry
      with:
        path: ~\AppData\Local\pypoetry\Cache\virtualenvs
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Install dependencies
      # Hopefully we are allowed to reuse id's, if not then each platform will need to be split up
      if: steps.cache-poetry.outputs.cache-hit != 'true'
      run:
        poetry install

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Error on warnings because I'm strict
        poetry run flake8 . --count --statistics

    - name: Check black formatting
      run: |
        poetry run black --check .

    - name: Test with pytest
      run: |
        poetry run pytest
