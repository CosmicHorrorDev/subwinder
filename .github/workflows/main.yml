name: Check Styling, Formatting, and Tests

# Trigger workflow on push or pull_request
on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get Full Python Version
      id: full-python-version
      shell: bash
      run: echo ::set-output name=version::$(python -c "import sys; print('.'.join(str(v) for v in sys.version_info))")

    - name: Install poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Set Common Virtual Environment Dir
      run: poetry config cache-dir $HOME/venv

    - name: Setup Cache
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/venv
        key: poetry-venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure Cache Health
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: poetry run pip --version >/dev/null 2>&1 || rm -rf ~/venv

    - name: Install dependencies
      run: poetry install

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Error on warnings because I'm strict
        poetry run flake8 . --count --statistics

    - name: Check black formatting
      run: poetry run black --check .

    - name: Test with pytest
      run: poetry run pytest
